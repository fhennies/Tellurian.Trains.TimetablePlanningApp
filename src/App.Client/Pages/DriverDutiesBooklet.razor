@using Tellurian.Trains.Planning.App.Client.Components
@layout PrintLayout
@page "/driverdutiesbooklet"
@inject Services.PrintedReportsService DataService

@if (Pages != null)
{
    @for (var i = 0; i < Pages.Length; i += 2)
    {
        <div class="pagebreak">
            @if (PageLeft(i).IsBlank)
            {
                <BlankDutyPage PageNumber="PageLeft(i).Number"></BlankDutyPage>
            }
            else if (PageLeft(i).IsFront)
            {
                <DutyFrontPage PageNumber="PageLeft(i).Number" Item="PageLeft(i).Duty"></DutyFrontPage>
            }
            else if (PageLeft(i).IsPart)
            {
                <DutyPartPage PageNumber="PageLeft(i).Number" Item="PageLeft(i).DutyPart" Duty="PageLeft(i).Duty"></DutyPartPage>
            }
            @if (PageRight(i).IsBlank)
            {
                <BlankDutyPage PageNumber="PageRight(i).Number"></BlankDutyPage>
            }
            else if (PageRight(i).IsFront)
            {
                <DutyFrontPage PageNumber="PageRight(i).Number" Item="PageRight(i).Duty"></DutyFrontPage>
            }
            else if (PageRight(i).IsPart)
            {
                <DutyPartPage PageNumber="PageRight(i).Number" Item="PageRight(i).DutyPart" Duty="PageRight(i).Duty"></DutyPartPage>
            }
        </div>
    }
}


@code
{
    private DutyPage[] Pages = Array.Empty<DutyPage>();
    private int pageNumber;

    override protected async Task OnInitializedAsync()
    {
        var result = await DataService.GetDriverDutiesAsync(Constants.LayoutId);
        if (result.statusCode.IsSuccess())
        {
            Pages = result.items.GetAllDriverDutyPagesInBookletOrder().ToArray();
        }
    }

    private string PagebreakCss()
    {
        pageNumber++;
        return pageNumber % 2 == 0 ? "pagebreak" : "";
    }

    private DutyPage PageLeft(int i) => Pages[i];
    private DutyPage PageRight(int i) => Pages[i + 1];
}
